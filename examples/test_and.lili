
Axiom fst : 'A /\ 'B -> 'A
Axiom snd : 'A /\ 'B -> 'B
Axiom and : 'P -> 'Q -> 'P /\ 'Q

Prop and_commut : A /\ B -> B /\ A
Proof :
  [ x : A /\ B ] => ((and (snd x)) (fst x))